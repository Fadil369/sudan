server {
  listen 80;
  listen [::]:80;
  server_name sudan-portal.gov.sd;

  # Redirect HTTP to HTTPS
  return 301 https://$server_name$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name sudan-portal.gov.sd;

  # SSL Configuration (use proper certificates in production)
  ssl_certificate /etc/ssl/certs/sudan-portal.crt;
  ssl_certificate_key /etc/ssl/private/sudan-portal.key;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
  ssl_prefer_server_ciphers off;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_stapling on;
  ssl_stapling_verify on;

  # Security Headers
  add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "strict-origin-when-cross-origin" always;
  add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
  
  # Content Security Policy
  add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://api.sudan.gov.sd wss://chat.sudan.gov.sd; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;

  # Hide server information
  server_tokens off;
  add_header X-Powered-By "Sudan Digital Government" always;

  # Rate limiting
  limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
  limit_req_zone $binary_remote_addr zone=login:10m rate=3r/m;
  limit_conn_zone $binary_remote_addr zone=conn:10m;

  # Main application
  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    try_files $uri /index.html;
    
    # Cache static assets
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff2?|ttf|eot)$ {
      expires 1y;
      add_header Cache-Control "public, immutable";
      add_header Vary "Accept-Encoding";
    }
    
    # Security for HTML files
    location ~* \.html$ {
      add_header Cache-Control "no-cache, no-store, must-revalidate";
      add_header Pragma "no-cache";
      add_header Expires "0";
    }
  }

  # API endpoints with enhanced security
  location /api/ {
    limit_req zone=api burst=20 nodelay;
    limit_conn conn 10;
    
    # Remove server info from API responses
    proxy_hide_header X-Powered-By;
    proxy_hide_header Server;
    
    # Add security headers for API
    add_header X-API-Version "1.0" always;
    add_header X-RateLimit-Remaining "10" always;
    
    # Proxy to backend (adjust as needed)
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;
    
    # Security timeouts
    proxy_connect_timeout 5s;
    proxy_send_timeout 10s;
    proxy_read_timeout 30s;
    
    # Buffer settings
    proxy_buffering on;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;
  }

  # Authentication endpoints with strict rate limiting
  location /api/auth/ {
    limit_req zone=login burst=5 nodelay;
    limit_conn conn 3;
    
    # Additional security for auth endpoints
    add_header X-Frame-Options "DENY" always;
    add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    
    # Log authentication attempts
    access_log /var/log/nginx/auth.log combined;
    
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Block common attack paths
  location ~* /(\.git|\.env|\.htaccess|wp-admin|admin|phpmyadmin) {
    deny all;
    access_log off;
    return 404;
  }

  # Block suspicious requests
  location ~* \.(php|asp|aspx|jsp)$ {
    deny all;
    access_log off;
    return 404;
  }

  # Health check endpoint (internal only)
  location /health {
    access_log off;
    allow 127.0.0.1;
    allow 10.0.0.0/8;
    allow 172.16.0.0/12;
    allow 192.168.0.0/16;
    deny all;
    return 200 "healthy\n";
    add_header Content-Type text/plain;
  }

  # Logging
  access_log /var/log/nginx/access.log combined;
  error_log /var/log/nginx/error.log warn;

  # Gzip compression
  gzip on;
  gzip_vary on;
  gzip_min_length 1024;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    application/json
    application/javascript
    application/xml+rss
    application/atom+xml
    image/svg+xml;
}
